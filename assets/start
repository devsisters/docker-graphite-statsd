#!/bin/bash

# configure carbon ------------------------------------------------------------
files=(/usr/local/src/carbon/conf/*.conf.example)
for file in ${files[@]}
do
	name=${file#/usr/local/src/carbon/conf/}
	name=${name%.example}
	newfile="/opt/graphite/conf/$name"
	if [[ ! -e "$newfile" ]]; then
		cp -v "$file" "$newfile"
	fi
done

# start carbon data collection daemon - default port: 2003 --------------------
mkdir -p /var/log/carbon
/opt/graphite/bin/carbon-cache.py start --logdir=/var/log/carbon

# configure graphite ----------------------------------------------------------
mkdir -p /var/log/graphite
cat << EOF > /opt/graphite/webapp/graphite/local_settings.py
LOG_DIR = '/var/log/graphite'
SECRET_KEY = '$(date +%s | sha256sum | base64 | head -c 64)'
TIME_ZONE = 'Asia/Seoul'
EOF


# configure django admin user -------------------------------------------------
if [ ! -f /opt/graphite_syncdb ]; then

cat << EOF > /opt/graphite_syncdb
#!/usr/bin/env expect

set timeout -1
spawn python /opt/graphite/webapp/graphite/manage.py syncdb

expect "Would you like to create one now" {
  send "yes\r"
}

expect "Username *:" {
  send "root\r"
}

expect "E-mail address:" {
  send "root.graphite@mailinator.com\r"
}

expect "Password:" {
  send "root\r"
}

expect "Password *:" {
  send "root\r"
}

expect "Superuser created successfully"
EOF
chmod 775 /opt/graphite_syncdb
/opt/graphite_syncdb

fi



# start graphite web app cgi server -------------------------------------------
python /opt/graphite/webapp/graphite/manage.py runfcgi host=127.0.0.1 port=8080

# start nginx -----------------------------------------------------------------
mkdir -p /var/log/nginx
service nginx start

# start statsd ----------------------------------------------------------------
node /opt/statsd/stats.js /opt/statsd/config.js 2>&1 >> /var/log/statsd.log &

tail -f /var/log/**/*.log
